{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/dashboard/services/car.service.ts","webpack:///src/app/xyz/xyz.component.ts","webpack:///src/app/xyz/xyz.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","loadChildren","m","DashboardModule","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","CarService","http","get","toPromise","res","data","XyzComponent","messageService","clonedCars","cars1","getCarsSmall","cars2","brands","label","value","car","vin","year","add","severity","summary","detail","index","brand","color","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { XyzComponent } from './xyz/xyz.component';\n\n\n\nconst routes: Routes = [\n  // { path: '', redirectTo: 'xyz', pathMatch: 'full' },\n  { path: 'xyz', component: XyzComponent },\n  {\n    path: 'dashboard',\n    loadChildren: () => import('./dashboard/dashboard.module').then(m => m.DashboardModule)\n  },\n  // { path: '**', redirectTo: '', pathMatch: 'full' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'pttest';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { XyzComponent } from './xyz/xyz.component';\nimport { TableModule } from 'primeng/table';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { ToastModule } from 'primeng/toast';\n\nimport { CarService } from './dashboard/services/car.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    XyzComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    TableModule,\n    DropdownModule,\n    ToastModule,\n    FormsModule,\n    AppRoutingModule, HttpClientModule\n\n  ],\n  providers: [CarService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Car } from './../models';\n\n@Injectable()\nexport class CarService {\n\n    constructor(private http: HttpClient) { }\n\n    getCarsSmall() {\n        return this.http.get<any>('assets/data/cars-small.json')\n            .toPromise()\n            .then(res => res.data as Car[])\n            .then(data => data);\n    }\n\n    getCarsMedium() {\n        return this.http.get<any>('assets/data/cars-medium.json')\n            .toPromise()\n            .then(res => res.data as Car[])\n            .then(data => data);\n    }\n\n    getCarsLarge() {\n        return this.http.get<any>('assets/data/cars-large.json')\n            .toPromise()\n            .then(res => res.data as Car[])\n            .then(data => data);\n    }\n}\n","import { Component, OnInit } from '@angular/core';\n// import { Car } from '../../components/domain/car';\n// import { CarService } from '../../service/carservice';\nimport { SelectItem } from 'primeng/api';\nimport { MessageService } from 'primeng/api';\n// import { AppComponent } from '../../app.component';\n\n@Component({\n  templateUrl: './xyz.component.html',\n  providers: [MessageService]\n})\nexport class XyzComponent implements OnInit {\n\n  cars1: any[];\n\n  cars2: any[];\n\n  brands: SelectItem[];\n\n  clonedCars: { [s: string]: any; } = {};\n\n  constructor(private messageService: MessageService) { }\n\n  ngOnInit() {\n    this.cars1 = this.getCarsSmall();\n    this.cars2 = this.getCarsSmall();\n\n    this.brands = [\n      { label: 'Audi', value: 'Audi' },\n      { label: 'BMW', value: 'BMW' },\n      { label: 'Fiat', value: 'Fiat' },\n      { label: 'Ford', value: 'Ford' },\n      { label: 'Honda', value: 'Honda' },\n      { label: 'Jaguar', value: 'Jaguar' },\n      { label: 'Mercedes', value: 'Mercedes' },\n      { label: 'Renault', value: 'Renault' },\n      { label: 'VW', value: 'VW' },\n      { label: 'Volvo', value: 'Volvo' }\n    ];\n  }\n\n  onRowEditInit(car: any) {\n    this.clonedCars[car.vin] = { ...car };\n  }\n\n  onRowEditSave(car: any) {\n    if (car.year > 0) {\n      delete this.clonedCars[car.vin];\n      this.messageService.add({ severity: 'success', summary: 'Success', detail: 'Car is updated' });\n    }\n    else {\n      this.messageService.add({ severity: 'error', summary: 'Error', detail: 'Year is required' });\n    }\n  }\n\n  onRowEditCancel(car: any, index: number) {\n    this.cars2[index] = this.clonedCars[car.vin];\n    delete this.clonedCars[car.vin];\n  }\n\n  getCarsSmall() {\n    const data = [{\n      vin: '11',\n      year: 1234,\n      brand: 'fff',\n      color: 'red'\n    }, {\n      vin: '22',\n      year: 4567,\n      brand: 'fff',\n      color: 'red'\n    }, {\n      vin: '33',\n      year: 8901,\n      brand: 'fff',\n      color: 'red'\n    }, {\n      vin: '44',\n      year: 2345,\n      brand: 'fff',\n      color: 'red'\n    }];\n\n    return data;\n  }\n\n}\n","<p-toast></p-toast>\n\n<p-table [value]=\"cars1\">\n  <ng-template pTemplate=\"header\">\n    <tr>\n      <th>Vin</th>\n      <th>Year</th>\n      <th>Brand</th>\n      <th>Color</th>\n    </tr>\n  </ng-template>\n  <ng-template pTemplate=\"body\" let-rowData>\n    <tr>\n      <td pEditableColumn>\n        <p-cellEditor>\n          <ng-template pTemplate=\"input\">\n            <input pInputText type=\"text\" [(ngModel)]=\"rowData.vin\" />\n          </ng-template>\n          <ng-template pTemplate=\"output\">\n            {{ rowData.vin }}\n          </ng-template>\n        </p-cellEditor>\n      </td>\n      <td pEditableColumn>\n        <p-cellEditor>\n          <ng-template pTemplate=\"input\">\n            <input pInputText type=\"text\" [(ngModel)]=\"rowData.year\" required />\n          </ng-template>\n          <ng-template pTemplate=\"output\">\n            {{ rowData.year }}\n          </ng-template>\n        </p-cellEditor>\n      </td>\n      <td pEditableColumn>\n        <p-cellEditor>\n          <ng-template pTemplate=\"input\">\n            <p-dropdown\n              [options]=\"brands\"\n              [(ngModel)]=\"rowData.brand\"\n              [style]=\"{ width: '100%' }\"\n            ></p-dropdown>\n          </ng-template>\n          <ng-template pTemplate=\"output\">\n            {{ rowData.brand }}\n          </ng-template>\n        </p-cellEditor>\n      </td>\n      <td pEditableColumn>\n        <p-cellEditor>\n          <ng-template pTemplate=\"input\">\n            <input pInputText type=\"text\" [(ngModel)]=\"rowData.color\" />\n          </ng-template>\n          <ng-template pTemplate=\"output\">\n            {{ rowData.color }}\n          </ng-template>\n        </p-cellEditor>\n      </td>\n    </tr>\n  </ng-template>\n</p-table>\n\n<h3>Row Editing</h3>\n<p-table [value]=\"cars2\" dataKey=\"vin\" editMode=\"row\">\n  <ng-template pTemplate=\"header\">\n    <tr>\n      <th>Vin</th>\n      <th>Year</th>\n      <th>Brand</th>\n      <th>Color</th>\n      <th style=\"width:8em\"></th>\n    </tr>\n  </ng-template>\n  <ng-template\n    pTemplate=\"body\"\n    let-rowData\n    let-editing=\"editing\"\n    let-ri=\"rowIndex\"\n  >\n    <tr [pEditableRow]=\"rowData\">\n      <td>\n        {{ rowData.vin }}\n      </td>\n      <td>\n        <p-cellEditor>\n          <ng-template pTemplate=\"input\">\n            <input pInputText type=\"text\" [(ngModel)]=\"rowData.year\" required />\n          </ng-template>\n          <ng-template pTemplate=\"output\">\n            {{ rowData.year }}\n          </ng-template>\n        </p-cellEditor>\n      </td>\n      <td>\n        <p-cellEditor>\n          <ng-template pTemplate=\"input\">\n            <p-dropdown\n              [options]=\"brands\"\n              [(ngModel)]=\"rowData.brand\"\n              [style]=\"{ width: '100%' }\"\n            ></p-dropdown>\n          </ng-template>\n          <ng-template pTemplate=\"output\">\n            {{ rowData.brand }}\n          </ng-template>\n        </p-cellEditor>\n      </td>\n      <td>\n        <p-cellEditor>\n          <ng-template pTemplate=\"input\">\n            <input pInputText type=\"text\" [(ngModel)]=\"rowData.color\" />\n          </ng-template>\n          <ng-template pTemplate=\"output\">\n            {{ rowData.color }}\n          </ng-template>\n        </p-cellEditor>\n      </td>\n      <td style=\"text-align:center\">\n        <button\n          *ngIf=\"!editing\"\n          pButton\n          type=\"button\"\n          pInitEditableRow\n          icon=\"pi pi-pencil\"\n          class=\"ui-button-info\"\n          (click)=\"onRowEditInit(rowData)\"\n        ></button>\n        <button\n          *ngIf=\"editing\"\n          pButton\n          type=\"button\"\n          pSaveEditableRow\n          icon=\"pi pi-check\"\n          class=\"ui-button-success\"\n          style=\"margin-right: .5em\"\n          (click)=\"onRowEditSave(rowData)\"\n        ></button>\n        <button\n          *ngIf=\"editing\"\n          pButton\n          type=\"button\"\n          pCancelEditableRow\n          icon=\"pi pi-times\"\n          class=\"ui-button-danger\"\n          (click)=\"onRowEditCancel(rowData, ri)\"\n        ></button>\n      </td>\n    </tr>\n  </ng-template>\n</p-table>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}